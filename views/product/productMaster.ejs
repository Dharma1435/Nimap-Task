<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Master</title>
    <style>
        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        table th, table td {
            padding: 10px;
            text-align: left;
            border: 1px solid #ccc;
        }
        table th {
            background-color: #f2f2f2;
        }
        .btn-primary {
            display: inline-block;
            padding: 10px 20px;
            margin: 10px 0;
            background-color: #007bff;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
        }
        .btn-primary:hover {
            background-color: #0056b3;
        }
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }
        .pagination a {
            padding: 8px 16px;
            margin: 0 5px;
            text-decoration: none;
            background-color: #f2f2f2;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .pagination a:hover {
            background-color: #007bff;
            color: white;
        }
        #viewModal, #updateModal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            width: 400px;
        }
        #viewModal h2, #updateModal h2 {
            margin-bottom: 20px;
        }
        .modal-content {
            margin-bottom: 10px;
        }
        .modal-actions {
            text-align: right;
        }
        .modal-actions button {
            margin: 0 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Product Master</h1>
        <a href="/product/createProduct" class="btn btn-primary">Add New Product</a>
        
        <table>
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>CategoryId</th>
                    <th>CategoryName</th>
                </tr>
            </thead>
            <tbody>
                <% products.forEach(product => { %>
                    <tr>
                        <td><%= product.name %></td>
                        <td><%= product.description %></td>
                        <td><%= product.price %></td>
                        <td><%= product.categoryId %></td>
                        <td><%= product.categoryName %></td>
                        <td>
                            <button onclick="viewProduct('<%= product.id %>')">View</button>
                            <button onclick="updateProduct('<%= product.id %>', '<%= product.name %>', '<%= product.description %>', '<%= product.price %>', '<%= product.category %>')">Update</button>
                            <button onclick="deleteProduct('<%= product.id %>')">Delete</button>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>

        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="/product/productMaster?page=<%= currentPage - 1 %>">Previous</a>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="/product/productMaster?page=<%= i %>" <%= currentPage === i ? 'style="background-color: #007bff; color: white;"' : '' %>><%= i %></a>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <a href="/product/productMaster?page=<%= currentPage + 1 %>">Next</a>
            <% } %>
        </div>
    </div>

    <div id="viewModal">
        <h2>Product Details</h2>
        <div class="modal-content">
            <p><strong>Product ID:</strong> <span id="viewProductId"></span></p>
            <p><strong>Product Name:</strong> <span id="viewProductName"></span></p>
            <p><strong>Description:</strong> <span id="viewProductDescription"></span></p>
            <p><strong>Price:</strong> <span id="viewProductPrice"></span></p>
            <p><strong>CategoryId:</strong> <span id="viewProductCategory"></span></p>
            <p><strong>Status:</strong> <span id="viewProductStatus"></span></p>
            <p><strong>Created At:</strong> <span id="viewProductCreatedAt"></span></p>
            <p><strong>Updated At:</strong> <span id="viewProductUpdatedAt"></span></p>
        </div>
        <div class="modal-actions">
            <button onclick="closeViewModal()">Close</button>
        </div>
    </div>

    <div id="updateModal">
        <h2>Update Product</h2>
        <form id="updateForm">
            <label for="updateName">Product Name:</label>
            <input type="text" id="updateName" name="name" required><br><br>

            <label for="updateDescription">Description:</label>
            <textarea id="updateDescription" name="description" required></textarea><br><br>

            <label for="updatePrice">Price:</label>
            <input type="number" id="updatePrice" name="price" required><br><br>

            <input type="hidden" id="updateProductId" name="id">

            <button type="button" onclick="submitUpdate()">Save Changes</button>
            <button type="button" onclick="closeModal()">Cancel</button>
        </form>
    </div>

    <script>
        function viewProduct(id) {
            fetch(`/product/getProductById/${id}`)
                .then(response => response.json())
                .then(data => {
                    const product = data.data;

                    document.getElementById('viewProductId').textContent = product.id;
                    document.getElementById('viewProductName').textContent = product.name;
                    document.getElementById('viewProductDescription').textContent = product.description;
                    document.getElementById('viewProductPrice').textContent = product.price;
                    document.getElementById('viewProductCategory').textContent = product.categoryId;
                    document.getElementById('viewProductStatus').textContent = product.is_Active ? 'Active' : 'Inactive';
                    document.getElementById('viewProductCreatedAt').textContent = new Date(product.createdAt).toLocaleString();
                    document.getElementById('viewProductUpdatedAt').textContent = new Date(product.updatedAt).toLocaleString();

                    document.getElementById('viewModal').style.display = 'block';
                })
                .catch(error => {
                    console.error('Error fetching product:', error);
                    alert('An error occurred while fetching product details.');
                });
        }

        function closeViewModal() {
            document.getElementById('viewModal').style.display = 'none';
        }

        function updateProduct(id, name, description, price, category) {
            document.getElementById('updateProductId').value = id;
            document.getElementById('updateName').value = name;
            document.getElementById('updateDescription').value = description;
            document.getElementById('updatePrice').value = price;

            document.getElementById('updateModal').style.display = 'block';
        }

        function closeModal() {
            document.getElementById('updateModal').style.display = 'none';
        }

        function submitUpdate() {
            const id = document.getElementById('updateProductId').value;
            const name = document.getElementById('updateName').value;
            const description = document.getElementById('updateDescription').value;
            const price = document.getElementById('updatePrice').value;

            fetch(`/product/updateProduct/${id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name, description, price })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data) {
                    alert('Product updated successfully');
                    window.location.href = '/product/productMaster';
                } else {
                    alert(data.msg || 'Error updating product');
                }
            })
            .catch(error => {
                console.error('Fetch Error:', error);
                alert('An error occurred while updating the product.');
            });
        }

        function deleteProduct(id) {
            fetch(`/product/deleteProduct/${id}`, {
                method: 'DELETE',
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data) {
                    alert('Product deleted successfully');
                    window.location.href = '/product/productMaster';
                } else {
                    alert(data.msg || 'Error deleting product');
                }
            })
            .catch(error => {
                console.error('Fetch Error:', error);
                alert('An error occurred while deleting the product.');
            });
        }
    </script>
</body>
</html>
